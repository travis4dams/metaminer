name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install pandoc (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -y pandoc

    - name: Install pandoc (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install pandoc

    - name: Install pandoc (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install pandoc
        refreshenv

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run tests
      run: pytest tests/ -v

    - name: Run tests with coverage
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      run: |
        pip install coverage
        coverage run -m pytest tests/
        coverage report
        coverage xml

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
